schema_version: 3.0.0
name: Ilias
key: ~
system: ~
documentation_complete: ~
responsible_role: ~
references: ~
satisfies:
- control_key: AC-2
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Ilias provides user accounts for individuals who participate in visiting, contributing
      to and administering the site with the following roles:

      - Anonymous user – Readers of the site who either do not have an account or
      are not logged in.

      - Guest – This role has limited visibility and read permissions

      - User - Standard role for registered users. This role grants read access to
      most objects.

      - Administrator - This role has all permissions enabled by default.
    key: a
  - text: Ilias' permissions and role-based access controls are built-in. Each role
      within Ilias can only access the pages and controls for which their privilege
      allows.
    key: d
  - text: Ilias monitors the usage of information accounts in a log on the server.
    key: g
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: AC-3
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Access control in Ilias is enforced by authentication via Shibboleth single
      sing on (SSO) for every type of user except Anonymous user. The user’s privileges,
      permissions, and access are provided on the principle of least privilege.

      The anonymous user role has the least access to the site of all roles. The website
      does not allow anonymous users to register an account for themselves. Project
      Administrators, HR Managers, and Org Managers are the only roles that can create
      new user accounts.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: AC-8
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: System Use Notification is inherited from the Project.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: AC-14
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: The anonymous user role has the least access to the site of all roles. The
      website does not allow anonymous users to register an account for themselves.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: AU-2
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Transaction logs are generated by the Apache web server, Ilias CMS, MySQL database
      and PHP page processing. Specifically, the following server, application, database
      and network device audit log events are captured:

      - Apache access log: Contains a list of requests for your website that have
      bypassed Varnish. These requests include pages, theme files, and static media
      files.

      - Apache error log: Records any Apache-level issues. The issues reported here
      are usually caused by general server issues, including capacity problems, .htaccess
      problems, and missing files.

      - Ilias page request log: Records all Ilias page loads on your website.

      - Ilias log: Records Ilias-related actions on your website. The log is recorded
      on your server.

      - MySQL slow query log: Contains a list of MySQL queries that have taken longer
      than one second to complete.

      - PHP error log: Records any issues that occur during the PHP processing portion
      of a page load. Issues reported here are usually caused by a website’s code,
      configuration, or content.
    key: a
  - text: All security-related issues and events, including requests for server log
      analysis, are recorded in CivicActions' JIRA tracking system.
    key: b
  - text: >
      CivicActions has extensive experience and specialization as a host of websites
      that are built using the Ilias web learning platform. Should the need for additional
      logging become evident, we have the ability to do so by modifying the website's
      source code to insert additional Ilias logging hooks.
    key: c
  - text: |
      Information captured in the transaction logs includes, but is not limited to, the following auditable events:
      - Failed login attempts
      - Successful login attempts
      - New user account creation
      - Password reset instructions mailed
      - User logins via a one-time login link
      - Content creation
      - Content publishing
      - Web page not found
      - Website configuration changes
      - System administration activities
      - Slow query logs.
      - PHP error logs: Captures any errors logged during execution of the PHP programming
        language.
    key: d
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: AU-3
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      The logs collected for Ilias sites include the following types of information:

      - IP number of the request originator

      - Timestamp

      - Username

      - Ilias log message (if applicable)

      - Unique numerical ID of the content being modified (for content creation, modification
      and deletion events)

      When auditing an Ilias incident, CivicActions' developers aggregate log sources
      from multiple servers into the Graylog dashboard so that all log entries for
      a single managed security incident can be analyzed in a single document. Log
      sources are sorted, filtered and reviewed. Application logs are maintained primarily
      for an after-the-fact investigation of critical systems or security events.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: CA-7
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: CivicActions follows recommendations and best practices developed by the
      Ilias community for monitoring. Examples of specific logs and metrics are included
      in AU-2 and AU-3.
    key: a
  - text: CivicActions works closely with the Ilias security community and reviews
      security announcements as part of the continuous monitoring strategy. Items
      found to require immediate remediation will be addressed.
    key: c
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: CM-2
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      The baseline configuration is maintained in Git and described in the Configuration
      Management Plan, which describes the change workflow and software configuration.
      In the context of Security Configuration Management, the baseline configuration
      is a collection of formally approved configuration state(s) of one or more configuration
      items ("features") that compose the system. The baseline configuration is used
      to restore and serves as the basis against which the next change or set of changes
      to the system is made.

      The features for the system are maintained in the website's source code, which
      is managed in Git, a source code version control system. Once the source code
      is updated, Git maintains the new version of staged code once committed in the
      Git repository as the new baseline. All code prior to it being staged is documented,
      tested and approved by CivicActions Development, which is described in control
      SA-3. The production environment is configured to take database snapshots daily.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: CM-8
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      The software inventory for the application is maintained in the codebase stored
      CivicActions' Git source code version control system. It consists of the following
      components:

      - The Ilias open-source web learning management system

      - Ilias add-on modules, themes, and libraries available from the Ilias.de website
      which extend Ilias core

      - Custom code written by CivicActions' developers

      The inventory is reviewed monthly by CivicActions Product Engineering teams
      in accordance with the Configuration Management Plan.

      Website content is backed up daily using CPM snapshots. This allows CivicActions
      to build an inventory of the system on demand.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: CM-10
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Ilias is hosted on a LAMP platform (Linux, Apache, MySQL, and PHP). These
      are all compatible with the Free Software Foundation's General Public License
      (GPL) version 2 or later and are freely available for use under copyright law.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: IA-4
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Upon account creation, the Ilias software assigns each user account a unique
      numerical user ID (UID). This UID is used internally by the system to track
      user actions such as content creation or editing. The numerical user IDs are
      never reused even if their user accounts are subsequently blocked or deleted.
    key: a
  - text: When Ilias user accounts are created, users' email addresses are verified
      by sending a single-use activation link to the user’s mailbox. The email recipient
      then uses the activation link to log in to the website and supply a password
      which must meet the system's password complexity requirements.
    key: b
  - text: Identifiers for CivicActions internal personnel include a username based
      on the individual's full first and last name and are reviewed for uniqueness
      by the admin group when it approves the creation of the user account.
    key: c
  - text: Ilias user's unique identifier (the numeric user ID, or UID) is never reused.
    key: d
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: IA-5
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Refer to control AC-2 in this SSP for further details on account provisioning.

      CivicActions will create and maintain an initial Ilias Administrator (highest
      level of Ilias Account). New Administrators are able to provide additional Administrator
      access at their own discretion and are ultimately responsible for managing their
      own Administrator and other user accounts that they create.
    key: a
  - text: Initial authenticator content (a unique email address – not previously used
      in any other account) is provided by the user. Internal initial password requirements
      set by CivicActions Operations and ongoing password refreshes by internal users
      follow the requirements set in the Identification and Authentication Policy.
    key: b
  - text: The system partially inherits this control from Ilias standard password
      strength mechanisms.
    key: c
  - text: |
      The system partially inherits this control from Ilias standard password management.
      All password creation/change/reset operations are recorded in the website's Ilias logs.
    key: d
  - text: Ilias requires users to change their password upon initial login, and the
      application website enforces this. Each user account is assigned a default password
      that is randomly generated, not possible to guess, and not shared with anyone,
      including site administrators. When the user logs in and creates a new password,
      the default password is erased from the website database.
    key: e
  - text: For all Ilias users, passwords are protected by the website's software,
      which only stores an encrypted string based on the password. This means that
      even if the website's database should be compromised, an attacker would still
      be unable to know users' actual passwords. Internal users receive training in
      security awareness and acceptable use and are instructed never to reveal their
      passwords to anyone.
    key: h
  - text: >
      Ilias users are required to take appropriate measures in the handling of passwords
      including:

      - Not transmitting user names and passwords together in an unencrypted format

      - Not permitting the sending of passwords in an unencrypted format via email

      - Not listing passwords in tickets

      - Not writing down or storing passwords in a readable form in any physical or
      logical location where they may be discoverable by unauthorized persons.
    key: i
  - text: This control is not applicable due to the fact that group accounts are not
      created within the Ilias application per IA Policy.
    key: j
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: IA-5 (1)
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Ilias supports the requirement for password-based authentication complexity.
      New users of Ilias are required to specify their password authentication as
      soon as they log in to the website for the first. The website requires all submitted
      passwords to comply with validation rules, as described above in IA-5(c).

      Changing password lifetime, length, reuse or strength requirements requires
      a code setting change that therefore needs to be planned and approved by {'name':
      'CivicActions, Inc', 'name_short': 'CivicActions', 'address': {'street': '3527
      Mt Diablo Blvd, Unit 269', 'city': 'Lafayette', 'state': 'CA', 'zip': 94549,
      'country': None}, 'phone': '510-408-7510', 'website': 'www.civicactions.com',
      'compliance_docs_url': 'https://github.com/CivicActions/compliance-docs', 'email_support':
      'support@civicactions.com', 'security_policy_url': 'https://github.com/CivicActions/security-policy'}'
      Change Control Board before being implemented.
    key: a
  - text: When required to change passwords, Ilias users are required to change their
      authenticator password by changing at least one character. Enforcement of this
      control is implemented through the website's software configuration.
    key: b
  - text: All Ilias passwords are encrypted in storage, using the SHA-512 hashing
      algorithm with a salt. The hash function is performed repeatedly to further
      obfuscate the password via key stretching. In transmission, passwords are encrypted
      using SSL via HTTPS.
    key: c
  - text: The website requires all submitted passwords to comply with lifetime rules,
      as described above in IA-5(g).
    key: d
  - text: Password reuse is limited through software configuration.
    key: e
  - text: When website users request a password reset, the website sends a temporary
      login link to the email address associated with their user account. After a
      user logs in via the temporary login link, the website requires the user to
      enter a new password before proceeding further.
    key: f
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: IA-6
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Feedback of authentication information is obscured during the authentication
      process into the Ilias application by displaying “dots” in the place of a password,
      as is standard for web-based applications. In transmission, passwords are encrypted
      using SSL via HTTPS.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: IA-7
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: All Ilias passwords are encrypted in storage, using the SHA-512 hashing
      algorithm with a salt. SHA-512 is an approved security function under FIPS PUB
      140-2. The hash function is performed repeatedly to further obfuscate the password
      via key stretching. In transmission, passwords are encrypted using SSL via HTTPS.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: SA-5
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: >
      Public documentation related to Ilias is maintained by the Ilias Association
      and is located at <https://Ilias.de/documentation>. This documentation contains
      administrator documentation for the information system that describes:

      - secure configuration, installation, and operation of the system, component,
      or service;

      - effective use and maintenance of security functions/mechanisms; and

      - known vulnerabilities regarding configuration and use of administrative functions;
    key: a
  - text: |
      The public documentation at Ilias.de contains user documentation for the information system that describes:
      - user-accessible security functions/mechanisms and how to effectively use those
        security functions/mechanisms;
      - methods for user interaction, which enables individuals to use the system,
        component, or service in a more secure manner; and
      - user responsibilities in maintaining the security of the system, component, or service;
    key: b
  - text: As a popular and well-used and maintained free and open source (FOSS) project,
      in the event that sought after documentation is not available on Ilias.de, it
      can usually be found in one of the many forums, mailing lists or Stack Exchange
      sites covering Ilias and its many contributed modules.
    key: c
  - text: The Ilias.de documentation is multi-sourced on GitHub and private repositories.
    key: d
  - text: As the Ilias.de documentation is publicly available, there is no need to
      provide distribution mechanisms.
    key: e
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: SC-5
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Ilias has a manual ability to block IP addresses in cases where attacks
      bypass cloud protection. This is managed by CivicActions Operations.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: SC-7
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Ilias, when deployed on SELinux in full enforcing mode, minimizes the number
      of services and computing nodes that are exposed to the Internet. Ilias employs
      both the AWS platform safeguards and the Ilias logging in monitoring and recording
      system events. All other computing nodes used in the system are isolated within
      AWS.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: SI-2
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: Ilias contains built-in security status monitoring of the core application
      and contributed modules.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
- control_key: SI-5
  standard_key: NIST_SP80053r4
  covered_by: []
  narrative:
  - text: CivicActions Security and Operations receive Ilias Security Advisories on
      a regular basis.
    key: ~
  references: ~
  implementation_statuses: ~
  control_origins: ~
  parameters: ~
