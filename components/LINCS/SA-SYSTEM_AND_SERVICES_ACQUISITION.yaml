name: LINCS
family: SYSTEM AND SERVICES ACQUISITION
documentation_complete: false
schema_version: 3.0.0
satisfies:

- control_key: SA-01
  control_key_part: ~
  control_name: SYSTEM AND SERVICES ACQUISITION POLICY AND PROCEDURES
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The Department of Education developed, documented and disseminated
    to personnel a system and services acquisition policy that addresses purpose,
    scope, roles, responsibilities, management committment, coordination among organizational
    entities, and compliance, and developed, documented and disseminated to personnel
    procedures to facilitate the implementation of the policy and associated controls.The
    policy is stated in the Office of the Secretary Information Security Policy dated
    July 17, 2013 and the procedures are defined in the Office of the Secretary Procedures
    Handbook for Information Security, Version 1.1 dated July 30, 2014. These documents
    will be reviewed periodically. These policies and procedures are applicable to
    the LINCS personnel using the lincs.ed.gov information system.

    The CivicActions ISSO is responsible for reviewing and updating the System and
    Services Acquisition Policy and Procedures annually. The Chief Operating Officer is
    responsible for approving System and Services Acquisition.  All procedures are
    consistent with requirements of FISMA, FedRAMP, ISO 27001, applicable executive
    orders, directives, policies, regulations, standards, and guidance. These policies and
    procedures are applicable to the CivicActions staff administering the lincs.ed.gov
    information system.

- control_key: SA-02
  control_key_part: a
  control_name: ALLOCATION OF RESOURCES
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    LINCS in collaboration with CivicActions determines, designates, documents, and
    allocates the resources required to protect the LINCS system as part of its capital
    planning and investment control processes. These individuals and groups act and/or
    meet on a pre-determined basis to determine information system security requirements
    and to develop implementation budgets and plans.

- control_key: SA-02
  control_key_part: b
  control_name: ALLOCATION OF RESOURCES
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The LINCS CFO is responsible for leading the annual budgeting process and for tracking
    organizational spending. The CFO coordinates with the CivicActions ISSO, the Chief
    Operating Officer and the Cloud Operations Manager on at least monthly basis to track
    security priorities and spending patterns and determine financial requirements. The
    CFO also coordinates the approval process for interim increases to the security
    budget, if required. This data is used to support the development of the annual
    budget.

- control_key: SA-02
  control_key_part: c
  control_name: ALLOCATION OF RESOURCES
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The annual budget developed by the CFO includes explicit budgetary line items
    for ISO 27001 and FISMA security requirements. Additional security-related expenditures
    that fall outside of explicit compliance requirements are addressed in sub-lines
    under the CivicActions Information Technology budget.

- control_key: SA-03
  control_key_part: a
  control_name: SYSTEM DEVELOPMENT LIFE CYCLE
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    CivicActions manages the LINCS system, based on CivicActions' DKAN software, which
    is based on the open source Drupal platform. lincs.ed.gov is managed by CivicActions
    using the Agile software development methodology, which provides a continuous
    System Development Life Cycle (SDLC) methodology that is consistent with the LINCS
    Enterprise Performance Life Cycle (EPLC). CivicActions' Agile management of the
    website continues to improve the software through ongoing planned code releases.
    Each point release introduces code and configuration changes to the website through
    the following SDLC methodology:

    • Code release planning: A code release ticket is created in the Change Request
    project of CivicActions' ticketing system which describes the overall goals of the
    code release. The code release ticket is linked to other tickets in CivicActions'
    Github ticketing system which describe issues to be addressed by the planned code
    release. Those issues may include bug fixes and feature enhancements as well as
    upgrades to newer versions of the Drupal software, the DKAN distribution, and the
    Drupal contributed modules that have been used to build the website.

    Security issues to be addressed in the planned code release may come from a variety of
    sources:

    • Customer support requests received by CivicActions' customer support team

    • Security concerns, incidents, and site performance issues reported by LINCS

    • Security incident reports, including server log analysis and root cause analysis
    of those incidents performed by CivicActions' Open Source Support Engineering
    team

    • Security notifications received by CivicActions' security team from the Drupal
    security team and other software vendors

    • Vulnerabilities detected during security scans of the website performed by
    CivicActions' security team

    • Issues reported by CivicActions' Open Data Engineering and product engineering
    teams

    • Security issues reported by AWS Cloud through its monitoring and ticketing
    system for lincs.ed.gov

    • Sprints: The tickets covered by the planned code release are then implemented
    through a series of planned sprints, each of which typically lasts two weeks.
    Each sprint begins with a sprint planning session at which CivicActions developers
    select a list of tickets to be implemented. The developer team holds daily coordination
    meetings throughout the sprint to share information and resolve any problems that
    may be blocking progress toward completion. At the end of the sprint, a retrospective
    is performed in which progress is reviewed to determine which issues have been
    resolved and which need further work.

    • Development/unit testing: Work on each ticket is performed within a separate code
    branch within CivicActions' git repository for lincs.ed.gov and tested using the
    CircleCI continuous integration platform. Developers also write unit tests to prove
    their code behaves as expected and address security considerations such as information
    leakage, bounds checking, and input validation. Once work on a ticket is completed,
    the developer creates a pull request, and the changes are submitted to at lease one
    other developer for review to ensure they meet functional requirements and address
    security considerations before the pull request is merged into git repository's
    development branch for the planned code release.

    • Integration testing: Once all work tickets have been completed, the code and
    configuration necessary to implement the changes is merged into the website's
    staging server, where it undergoes additional testing to ensure there are no conflicts
    between the work that has been done on individual tickets.

    • User acceptance testing (UAT): The code release undergoes manual testing against
    a checklist of expected site behaviors and options each of the website's defined
    user roles to further verify that the functional changes work as expected and
    to identify any changes in user experience that need to be documented in release
    notes to be shared with the customer.

    • Approval for deployment: After all the planned code release has passed all of
    the above tests, the code release is scheduled for deployment to production and
    presented to CivicActions' Change Control Board (CCB) for review and approval.

    • Deployment to production: A full backup of the website is performed immediately
    prior to the deployment.

    • Security scan: After the deployment to production, the website undergoes a security
    scan using the a web vulnerability scanner.

- control_key: SA-03
  control_key_part: b
  control_name: SYSTEM DEVELOPMENT LIFE CYCLE
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The CivicActions organization defines and documents information security roles
    and responsibilities throughout the SDLC. The following teams participate in this
    process:

    • Customer Support: Files tickets when incidents are reported and shares incident
    reports with customers

    • Security: Receives security notifications from the Drupal security team and
    other software vendors; performs security scans of healthdata.org; uses CivicActions'
    Github ticketing system to request mitigation of all reported vulnerabilities

    • Open Source Support Engineering: Performs server log analysis when security
    incidents are reported; assists in root cause analysis

    • Open Data Platform Engineering: Provides programming support to fix security
    issues; deploys code changes to the production website

    • DKAN Product Engineering: Oversees website software design and planning; employs
    code analysis tools to examine software for common flaws and fixes flaws when
    detected

    • Change Control Board: Meets weekly to review and approve upcoming planned code
    changes to the website, include security-related code releases.

    • AWS Cloud: Monitors server and application events; proactively responds to
    security incidents, and reports incidents to CivicActions

    • LINCS: Communicates customer security requirements and expectations, and alerts
    CivicActions' customer support team whenever it detects a security or site performance
    issue

    Security responsibilities performed by these teams include the following:

    • Perform configuration management during information system design, development,
    implementation, and operation;

    • Manage and control changes to the to the LINCS system;

    • Implement only organization-approved changes;

    • Document approved changes to the LINCS system;

    • Fully test all changes to the LINCS, taking into account security considerations
    as well as other functional requirements;

    • Track security flaws and flaw resolution; and

    • Employ code analysis tools to examine software for common flaws and document
    the results of the analysis.

- control_key: SA-03
  control_key_part: c
  control_name: SYSTEM DEVELOPMENT LIFE CYCLE
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    Each of the CivicActions teams described in SA-3(b) has a team leader who is responsible
    for defining roles and responsibilities of individual personnel members within
    that team. CivicActions uses role base management and access and authentication
    implementation and enforcement.

- control_key: SA-03
  control_key_part: d
  control_name: SYSTEM DEVELOPMENT LIFE CYCLE
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The CivicActions organization integrates the organizational information security
    risk management process into system development life cycle activities by requiring
    that the processes defined in SA-3(a) and (b) above are adhered to by all information
    system developers and associated security personnel.

- control_key: SA-04
  control_key_part: c
  control_name: ACQUISITIONS
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: Partially in Place
  narrative: >
    LINCS requires all software and hardware products undergo a security risk
    assessment prior to purchase. This assessment evaluates the product based on the
    vendor’s security practices, policies, and past performance. It also details the
    potential maintenance and end-of-life ramifications with regards to security.

- control_key: SA-04
  control_key_part: d
  control_name: ACQUISITIONS
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: Partially in Place
  narrative: >
    The LINCS ISSO is responsible for determining the security documentation that must be
    included in information system or services acquisition contracts.  In determining
    these requirements the LINCS ISSO coordinates with the Development Operations Manager,
    Customer Support Engineering Manager, the Contracts Manager, and if necessary the
    Chief Operating Officer.

    The LINCS ISSO ensures all components of the LINCS system system boundary are properly
    documented to meet the CivicActions Acquisition Security Policy. Prior to testing
    and deployment to production.

- control_key: SA-04
  control_key_part: g
  control_name: ACQUISITIONS
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: Partially in Place
  narrative: >
    The LINCS System and Services Acquisition Policy contains the process for determining
    acceptance criteria for all LINCS system software and services.

    The LINCS organization includes the use of Common Criteria (ISO/IEC 15408) evaluated
    products in all acquisition contracts in accordance with applicable federal laws,
    Executive Orders, directives, policies, regulations, standards, guidelines, and
    organizational mission/business needs.

- control_key: SA-04 (10)
  control_key_part: ~
  control_name: USE OF APPROVED PIV PRODUCTS
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: Not Applicable
  narrative: >
    CivicActions/LINCS and AWS describes this control as “not applicable”,
    as PIV credentials are not applicable to the LINCS system. Access and Authentication
    requirements for the LINCS system for internal CivicActions and customer are implemented
    under access management and enforcement (AC-2 and AC-3) and identification and
    authentication for all users (IA-2 and IA-8).

    It is the responsibiility of LINCS for implementation of PIV capability for authentication
    as required.

- control_key: SA-05
  control_key_part: a
  control_name: INFORMATION SYSTEM DOCUMENTATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The LINCS system is configured based on the DKAN distribution of Drupal. Administrator
    documentation for the Drupal application framework and contributed modules are
    located at http://drupal.org/documentation. The Drupal documentation repository
    is maintained by the Drupal Documentation Team: http://drupal.org/contribute/documentation.
    Public documentation related to DKAN is maintained by CivicActions and is located
    at: http://docs.getdkan.com. CivicActions also maintains additional documentation
    in a "DKAN Guide" that is updated with each new point release of DKAN, which happens
    roughly every three months. The latest point release is DKAN 7.x-1.15, so the
    current guide is named  "DKAN 7.x-1.15 Guide." Administrator documentation for
    DKAN is included In the DKAN Guide.

    Some features of lincs.ed.gov were built on a custom basis and are not part
    of standard DKAN. Administrator documentation for those custom features is maintained
    in CivicActions' Github documentation system in a Github page named "LINCS Custom
    Development."

    Since DKAN is an open source project, all DKAN standard documentation is available
    to unauthenticated and authenticated users. Administrator documentation for custom
    features that were built specifically for lincs.ed.gov is only shared with CivicActions
    personnel.

    CivicActions' Open Data Platform Engineering team maintains documentation for
    developers in Github explaining how to create copies of the lincs.ed.gov website
    for testing purposes. This documentation includes instructions to sanitize the
    website's database when creating test copies of the website. (For example, email
    addresses and user passwords are obfuscated.)

- control_key: SA-05
  control_key_part: b
  control_name: INFORMATION SYSTEM DOCUMENTATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The publicly-available Drupal and DKAN documentation described in control SA-5(a)
    also includes user documentation for non-administrators, including for the roles
    of Content Creator, Editor, Site Manager, Workflow Contributor, Workflow Moderator
    and Workflow Supervisor as described in control AC-3. This includes documentation
    on how to create and manage user accounts as well as how to create, update and
    delete datasets, resources, blog entries and other content on the website.

- control_key: SA-05
  control_key_part: c
  control_name: INFORMATION SYSTEM DOCUMENTATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    CivicActions' Customer Support team, described in control SA-3(b), handles all
    questions from LINCS about how to use lincs.ed.gov. Questions are submitted by
    sending an email to support@civicactions.com, which triggers creation of a ticket
    in CivicActions' customer support ticketing system. If the information needed
    to answer a question is not already included in the website's documentation, the
    ticket is reviewed to determine whether the question is sufficiently general in
    nature to warrant adding the answer to the website's documentation.

- control_key: SA-09
  control_key_part: ~
  control_name: EXTERNAL INFORMATION SYSTEM SERVICES
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    This is a planned control.

    CivicActions employs Jenkins (https://jenkins.io/), an open source "task runner"
    software system, to run scripts that perform common automated site maintenance
    tasks on lincs.ed.gov. These tasks include:

    • Re-running the DKAN Data Harvester

    • Rebuilding the website's data.json feed

    • Checking the site periodically to perform uptime monitoring and to automatically
    restore the site to normal functioning if it detects a service interruption.

    Jenkins is installed on a website created by CivicActions that is currently hosted
    on the Linode web hosting platform (www.linode.com). Linode is not FedRAMP certified.
    We plan to move the Jenkins website onto a FedRAMP-certified hosting platform
    by the end of 2016.

    CivicActions does not currently have any other dedicated interconnections between
    information system components within the authorization boundary and external third-party
    vendor information systems for the purposes of storing, processing, or transmitting
    federal customer data. If additional external information system services are
    required in the future, CivicActions shall employ appropriate security controls
    in accordance with applicable federal laws, Executive Orders, directives, policies,
    regulations, standards, and guidance.

    LINCS is hosted on the AWS Cloud platform, which was approved under the
    FedRAMP Provisional ATO granted to the AWS Cloud dated 17 March 2016. As such,
    AWS is already a FedRAMP-approved CSP and currently meets the FedRAMP
    requirements.

- control_key: SA-10 (1)
  control_key_part: ~
  control_name: SOFTWARE / FIRMWARE INTEGRITY VERIFICATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    In accordance with the LINCS/DKAN Configuration Management Plan
    (<https://github.com/NuCivic/healthdata/wiki/configuration-management-plan>),
    integrity verification tools are employed on the LINCS system to detect unauthorized
    changes. The first line of monitoring is that CivicActions developers use the git
    source code version control system to manage all source code running on
    lincs.ed.gov.  The git repository is hosted by AWS Cloud as part of its
    PaaS hosting service. CivicActions maintains its own separate clone of the git
    repository which mirrors the AWS repository and is hosted on GitHub. All code
    objects, branches and git commits are check-summed before they are stored and can then
    be referred to by that checksum. This prevents anyone from to changing the contents of
    any file or directory without Git detecting the unauthorized change. This
    functionality is built into Git at the lowest levels and is integral to its
    philosophy.

    As initiated by the CM process, any changes to the website's code submitted by
    a developer must be peer reviewed by another member from the Open Data Platform
    Engineering or the DKAN Product Engineering team. All changes in source code are
    required to submit the source code through the PHP Authenticator to verify it
    is formatted correctly.

- control_key: SA-11
  control_key_part: a
  control_name: DEVELOPER SECURITY TESTING AND EVALUATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    Development testing efforts follow a structured methodology as defined within the
    Security Assessment Plan (SAP). The SAP is outlined within the Software Release
    Process document on the CivicActions Wiki. All activities that impact the system,
    including all developer security testing activities, are recorded in GitHub throughout
    the phases of the system development lifecycle. In accordance with the LINCS/DKAN
    Configuration Management Plan
    (<https://github.com/NuCivic/healthdata/wiki/configuration-management-plan>), section
    4, a security impact of change is conducted during the request for change.

    All tickets are peer-reviewed and changes are tested in a lower environment before
    deployment to production. At all stages the CivicActions Open Data Platform Engineering,
    DKAN Product Engineering and Open Source Support Engineering teams validate that
    ticket-specific QA procedures have been satisfied and conduct testing to ensure
    that required changes were implemented securely and in such a manner as to preserve
    the confidentiality, integrity and availability of system resources and data,
    through the process described in control SA-3.

- control_key: SA-11
  control_key_part: b
  control_name: DEVELOPER SECURITY TESTING AND EVALUATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    As described in CM-2, CM-4, and SA-3, CivicActions manages the LINCS system development
    life cycle (SDLC) methodology that includes developer information security
    considerations including:

    • Unit, integration, system, and regression testing/evaluation with enough depth
    and coverage to determine if the required security controls are implemented correctly,
    operating as intended, enforcing the desired security policy, and meeting established
    security requirements

    In addition to the testing/evaluation perform in the security assessment plan
    described in SA-11(a), an application vulnerability scanner and Drupal system
    monitoring tools are used to identify software flaws. System weaknesses and deficiencies
    identified by security testing are remediated and addressed through CivicActions'
    Github issue ticketing system.

- control_key: SA-11
  control_key_part: c
  control_name: DEVELOPER SECURITY TESTING AND EVALUATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    Development testing efforts follow a structured methodology as defined within
    the Security Assessment Plan (SAP) and/or the CivicActions SDLC defined in SA-3.

- control_key: SA-11
  control_key_part: d
  control_name: DEVELOPER SECURITY TESTING AND EVALUATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    The steps in flaw remediation for CivicActions, including developers, follow the
    Configuration Change Control described in the LINCS/DKAN Configuration Management Plan
    (<https://github.com/NuCivic/healthdata/wiki/configuration-management-plan>), section
    3.3 and implementation of SI-10. The LINCS team develops, tests, validates, and
    documents proposed changes prior to implementation to assess the impact to the
    security and privacy risk posture of the system.  Approval for any change as a result
    of the identifying flaws to the LINCS system will be processed by CivicActions Security,
    Open Data Platform Engineering, DKAN Product Engineering, and the Open source support
    engineering teams. All change requests are organized into code release tickets in
    Github, which are approved and reviewed by the Change Control Board (CCB) prior to
    deployment to production.

- control_key: SA-11
  control_key_part: e
  control_name: DEVELOPER SECURITY TESTING AND EVALUATION
  standard_key: NIST-800-53
  covered_by: []
  security_control_type: Hybrid
  implementation_status: In Place
  narrative: >
    Flaws identified by the CivicActions Security team are logged in Github issues,
    reviewed by the Open Data Platform Engineering and DKAN Product Engineering teams,
    and submitted for resolution. CivicActions security personnel may also identify
    flaws during security testing and thus will initiate a Github ticket to begin
    remediation efforts.

